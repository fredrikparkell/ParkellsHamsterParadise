// <auto-generated />
using System;
using HamsterParadise.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HamsterParadise.DataAccess.Migrations
{
    [DbContext(typeof(HamsterDbContext))]
    [Migration("20210404135605_CreateSPForUpdatingCageSize")]
    partial class CreateSPForUpdatingCageSize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HamsterParadise.DataAccess.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityName = "Arrived"
                        },
                        new
                        {
                            Id = 2,
                            ActivityName = "Exercise"
                        },
                        new
                        {
                            Id = 3,
                            ActivityName = "Cage"
                        },
                        new
                        {
                            Id = 4,
                            ActivityName = "Departure"
                        });
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("HamsterId")
                        .HasColumnType("int");

                    b.Property<int>("SimulationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("HamsterId");

                    b.HasIndex("SimulationId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Cage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CageSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Cages");

                    b.HasCheckConstraint("CK_Cage_CageSize", "[CageSize] >= 0 AND [CageSize] < 4");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 2,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 3,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 4,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 5,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 6,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 7,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 8,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 9,
                            CageSize = 0
                        },
                        new
                        {
                            Id = 10,
                            CageSize = 0
                        });
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.ExerciseArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CageSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("ExerciseAreas");

                    b.HasCheckConstraint("CK_ExerciseArea_CageSize", "[CageSize] >= 0 AND [CageSize] < 7");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CageSize = 0
                        });
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Hamster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckedInTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("ExerciseAreaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFemale")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastExerciseTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CageId");

                    b.HasIndex("ExerciseAreaId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Hamsters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 2,
                            IsFemale = false,
                            Name = "Nisse",
                            OwnerId = 5
                        },
                        new
                        {
                            Id = 2,
                            Age = 1,
                            IsFemale = false,
                            Name = "Junior",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 3,
                            Age = 3,
                            IsFemale = false,
                            Name = "Rufus",
                            OwnerId = 10
                        },
                        new
                        {
                            Id = 4,
                            Age = 1,
                            IsFemale = false,
                            Name = "Lilleman",
                            OwnerId = 15
                        },
                        new
                        {
                            Id = 5,
                            Age = 2,
                            IsFemale = true,
                            Name = "Vilma",
                            OwnerId = 2
                        },
                        new
                        {
                            Id = 6,
                            Age = 2,
                            IsFemale = true,
                            Name = "Greta",
                            OwnerId = 9
                        },
                        new
                        {
                            Id = 7,
                            Age = 3,
                            IsFemale = false,
                            Name = "Brutus",
                            OwnerId = 12
                        },
                        new
                        {
                            Id = 8,
                            Age = 1,
                            IsFemale = false,
                            Name = "Pelle",
                            OwnerId = 3
                        },
                        new
                        {
                            Id = 9,
                            Age = 1,
                            IsFemale = false,
                            Name = "Buttons",
                            OwnerId = 21
                        },
                        new
                        {
                            Id = 10,
                            Age = 2,
                            IsFemale = true,
                            Name = "Apple",
                            OwnerId = 16
                        },
                        new
                        {
                            Id = 11,
                            Age = 1,
                            IsFemale = true,
                            Name = "Fluffy",
                            OwnerId = 13
                        },
                        new
                        {
                            Id = 12,
                            Age = 3,
                            IsFemale = false,
                            Name = "Einstein",
                            OwnerId = 11
                        },
                        new
                        {
                            Id = 13,
                            Age = 2,
                            IsFemale = true,
                            Name = "Bella",
                            OwnerId = 9
                        },
                        new
                        {
                            Id = 14,
                            Age = 3,
                            IsFemale = false,
                            Name = "Taco",
                            OwnerId = 7
                        },
                        new
                        {
                            Id = 15,
                            Age = 2,
                            IsFemale = false,
                            Name = "Klopapier",
                            OwnerId = 20
                        },
                        new
                        {
                            Id = 16,
                            Age = 2,
                            IsFemale = true,
                            Name = "Anna Book",
                            OwnerId = 4
                        },
                        new
                        {
                            Id = 17,
                            Age = 1,
                            IsFemale = true,
                            Name = "Mindy",
                            OwnerId = 6
                        },
                        new
                        {
                            Id = 18,
                            Age = 2,
                            IsFemale = true,
                            Name = "Dota",
                            OwnerId = 3
                        },
                        new
                        {
                            Id = 19,
                            Age = 1,
                            IsFemale = true,
                            Name = "Candy",
                            OwnerId = 16
                        },
                        new
                        {
                            Id = 20,
                            Age = 3,
                            IsFemale = false,
                            Name = "Bubba",
                            OwnerId = 19
                        },
                        new
                        {
                            Id = 21,
                            Age = 2,
                            IsFemale = false,
                            Name = "Elvis",
                            OwnerId = 8
                        },
                        new
                        {
                            Id = 22,
                            Age = 3,
                            IsFemale = true,
                            Name = "Alexandra",
                            OwnerId = 17
                        },
                        new
                        {
                            Id = 23,
                            Age = 3,
                            IsFemale = true,
                            Name = "Lulu",
                            OwnerId = 18
                        },
                        new
                        {
                            Id = 24,
                            Age = 2,
                            IsFemale = true,
                            Name = "Miss Vegan",
                            OwnerId = 5
                        },
                        new
                        {
                            Id = 25,
                            Age = 1,
                            IsFemale = false,
                            Name = "Falukorv",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 26,
                            Age = 2,
                            IsFemale = true,
                            Name = "Blondie",
                            OwnerId = 4
                        },
                        new
                        {
                            Id = 27,
                            Age = 2,
                            IsFemale = false,
                            Name = "Hasse",
                            OwnerId = 14
                        },
                        new
                        {
                            Id = 28,
                            Age = 3,
                            IsFemale = false,
                            Name = "Richard Gere",
                            OwnerId = 8
                        },
                        new
                        {
                            Id = 29,
                            Age = 2,
                            IsFemale = true,
                            Name = "Gullis",
                            OwnerId = 20
                        },
                        new
                        {
                            Id = 30,
                            Age = 1,
                            IsFemale = true,
                            Name = "Summer",
                            OwnerId = 12
                        });
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Owner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "fredrikparkell5@gmail.com",
                            Name = "Fredrik Parkell"
                        },
                        new
                        {
                            Id = 2,
                            Email = "steffeboi2021@protonmail.com",
                            Name = "Stefan Trenh"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ninaspelardota2@yopmail.com",
                            Name = "Nils Brufors"
                        },
                        new
                        {
                            Id = 4,
                            Email = "annab00kfan111@yopmail.com",
                            Name = "Johan Nilsson"
                        },
                        new
                        {
                            Id = 5,
                            Email = "commiev3ganf0l1fe@yopmail.com",
                            Name = "David Lindgren Kamali"
                        },
                        new
                        {
                            Id = 6,
                            Email = "iceland4l1fe@protonmail.com",
                            Name = "Einar Olafsson"
                        },
                        new
                        {
                            Id = 7,
                            Email = "ringhalsen@yandex.com",
                            Name = "Emile Nestor"
                        },
                        new
                        {
                            Id = 8,
                            Email = "333333svanen333333@yopmail.com",
                            Name = "Olof Svahn"
                        },
                        new
                        {
                            Id = 9,
                            Email = "jjjjjjnnnn123@yandex.com",
                            Name = "Julia Nilsson"
                        },
                        new
                        {
                            Id = 10,
                            Email = "jp0racing@yopmail.com",
                            Name = "Johannes Posse"
                        },
                        new
                        {
                            Id = 11,
                            Email = "llll1ebro@hotmail.com",
                            Name = "Andreas Lind"
                        },
                        new
                        {
                            Id = 12,
                            Email = "shieldman9000@yopmail.com",
                            Name = "Ludvig Sköld"
                        },
                        new
                        {
                            Id = 13,
                            Email = "dlk1337@outlook.com",
                            Name = "Madelene Sjösten"
                        },
                        new
                        {
                            Id = 14,
                            Email = "innebandyproffset100@protonmail.com",
                            Name = "Andrea Envall"
                        },
                        new
                        {
                            Id = 15,
                            Email = "falkenbergaren1@yandex.com",
                            Name = "Louis Headlam"
                        },
                        new
                        {
                            Id = 16,
                            Email = "falkenbergaren2@yopmail.com",
                            Name = "Albin Ahmetaj"
                        },
                        new
                        {
                            Id = 17,
                            Email = "mrlaholm@yopmail.com",
                            Name = "Mattis Kindblom"
                        },
                        new
                        {
                            Id = 18,
                            Email = "robinlovesvarberg@yopmail.com",
                            Name = "Robin Tranberg"
                        },
                        new
                        {
                            Id = 19,
                            Email = "5muneagle@mail.com",
                            Name = "Simon Hörnfalk"
                        },
                        new
                        {
                            Id = 20,
                            Email = "ccccffff00@outlook.com",
                            Name = "Carl Fredrik Ahl"
                        },
                        new
                        {
                            Id = 21,
                            Email = "p9hhjds33@protonmail.com",
                            Name = "Paul Tannenberg"
                        });
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Simulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Simulations");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.ActivityLog", b =>
                {
                    b.HasOne("HamsterParadise.DataAccess.Activity", "Activity")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamsterParadise.DataAccess.Hamster", "Hamster")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("HamsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamsterParadise.DataAccess.Simulation", "Simulation")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("SimulationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Hamster");

                    b.Navigation("Simulation");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Hamster", b =>
                {
                    b.HasOne("HamsterParadise.DataAccess.Cage", "Cage")
                        .WithMany("Hamsters")
                        .HasForeignKey("CageId");

                    b.HasOne("HamsterParadise.DataAccess.ExerciseArea", "ExerciseArea")
                        .WithMany("Hamsters")
                        .HasForeignKey("ExerciseAreaId");

                    b.HasOne("HamsterParadise.DataAccess.Owner", "Owner")
                        .WithMany("Hamsters")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cage");

                    b.Navigation("ExerciseArea");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Activity", b =>
                {
                    b.Navigation("ActivityLogs");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Cage", b =>
                {
                    b.Navigation("Hamsters");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.ExerciseArea", b =>
                {
                    b.Navigation("Hamsters");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Hamster", b =>
                {
                    b.Navigation("ActivityLogs");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Owner", b =>
                {
                    b.Navigation("Hamsters");
                });

            modelBuilder.Entity("HamsterParadise.DataAccess.Simulation", b =>
                {
                    b.Navigation("ActivityLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
